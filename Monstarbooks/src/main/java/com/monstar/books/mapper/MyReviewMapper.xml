<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.monstar.books.mypage.dao.MyReviewDao">
	<sql id="includeList">
		<choose>
			<when test="param4==1">
				WHERE RTITLE LIKE '%'|| #{param3} || '%'
			</when>
			<when test="param4==2">
				WHERE RCONTENT LIKE '%'|| #{param3} || '%'
			</when>
			<when test="param4==3">
				WHERE RTITLE LIKE '%'|| #{param3} || '%' OR RCONTENT
				LIKE '%'|| #{param3} || '%'
			</when>
			<otherwise>
			</otherwise>
		</choose>
	</sql>

	<!-- includeList라는 SQL 조각을 정의하는 부분입니다. 이 조각은 조건에 따라 다른 WHERE 절을 생성합니다. <choose>는 
		SQL 조건문의 선택 블록을 나타냅니다. <when>은 조건이 참인 경우 실행됩니다. 여기서 param4 값에 따라 다른 조건절을 
		생성합니다. <otherwise>는 <when> 조건이 모두 거짓인 경우 실행됩니다. -->

	<!-- [효슬] 마이페이지 추가 -->

	<!-- 230824 [효슬] MyReviewDto에 대한 resultMap 정의 -->
	<resultMap type="com.monstar.books.mypage.dto.MyReviewDto"
		id="MyReview">
		<!-- 컬럼과 프로퍼티 매핑 -->
		<result column="REVIEWNO" property="reviewno" />
		<result column="BOOKNO" property="bookno" />
		<result column="MEMBERNO" property="memberno" />
		<result column="RTITLE" property="rtitle" />
		<result column="RCONTENT" property="rcontent" />
		<result column="REGDATE" property="regdate" />
		<result column="RSTAR" property="rstar" />
		<result column="REFILESRC" property="refilesrc" />
		<result column="DELETED" property="deleted" />
		<!-- 연관된 컬렉션 매핑 -->
		<collection property="member" resultMap="Member"></collection>
		<collection property="book" resultMap="Book"></collection>
		<collection property="bookdetail" resultMap="Bookdetail"></collection>
		<collection property="bookcategory"
			resultMap="Bookcategory"></collection>
		<collection property="orderdetail" resultMap="Orderdetail"></collection>
	</resultMap>

	<!-- BookDto에 대한 resultMap 정의 -->
	<resultMap type="com.monstar.books.mypage.dto.BookDto"
		id="Book">
		<!-- 컬럼과 프로퍼티 매핑 -->
		<result column="BOOKNO" property="bookno" />
		<result column="BTITLE" property="btitle" />
		<result column="BSUBTITLE" property="bsubtitle" />
		<result column="BWRITER" property="bwriter" />
		<result column="BTRANSLATOR" property="btranslator" />
		<result column="BPUBLISHER" property="bpublisher" />
		<result column="BPDATE" property="bpdate" />
		<result column="BPRICE" property="bprice" />
		<result column="BPRICESELL" property="bpricesell" />
		<result column="BDISCOUNT" property="bdiscount" />
		<result column="BISBN" property="bisbn" />
		<result column="BSTATUS" property="bstatus" />
		<result column="BCDATE" property="bcdate" />
		<result column="BMDATE" property="bmdate" />
		<result column="book" property="Book" />
	</resultMap>

	<!-- BookCategoryDto에 대한 resultMap 정의 -->
	<resultMap
		type="com.monstar.books.mypage.dto.BookCategoryDto" id="Bookcategory">
		<!-- 컬럼과 프로퍼티 매핑 -->
		<result column="BCATEGORYNO" property="bcategoryno" />
		<result column="BCATEGORY1" property="bcategory1" />
		<result column="BCATEGORY2" property="bcategory2" />
	</resultMap>

	<!-- resultmap 타입으로 변경 -->
	<resultMap type="com.monstar.books.member.dto.MemberDto"
		id="Member">
		<result column="MEMBERNO" property="memberno" />
		<result column="MID" property="mid" />
		<result column="MPW" property="mpw" />
		<result column="MBIRTH" property="mbirth" />
		<result column="MNAME" property="mname" />
		<result column="MEMAIL" property="memail" />
		<result column="MTEL" property="mtel" />
		<result column="MREGDATE" property="mregdate" />
		<result column="MPROFILEIMG" property="mprofileimg" />
		<result column="MFAVORITE" property="mfavorite" />
		<result column="MAUTHORITY" property="mauthority" />
		<result column="MDELETED" property="mdeleted" />
		<result column="member" property="Member" />
	</resultMap>

	<resultMap type="com.monstar.books.mypage.dto.OrderDetailDto"
		id="Orderdetail">
		<result column="ORDERNO" property="orderno" />
		<result column="BOOKNO" property="bookno" />
		<result column="OPRICESELL" property="opricesell" />
		<result column="OCOUNT" property="ocount" />
		<result column="OREFUND_CHECK" property="orefund_check" />
		<result column="OREGDATE" property="oregdate" />

	</resultMap>

	<resultMap
		type="com.monstar.books.booklist.dto.BookDetailDto" id="Bookdetail">
		<result column="BOOKNO" property="bookno" />
		<result column="BCATEGORYNO" property="bcategoryno" />
		<result column="BIMG" property="bimg" />
		<result column="BIMGDETAIL" property="bimgdetail" />
		<result column="BDESCRIPTION" property="bdescription" />
		<result column="BPAGE" property="bpage" />
		<result column="BSIZE" property="bsize" />
		<result column="BADGE" property="badge" />
		<result column="BPDATE" property="bpdate" />
	</resultMap>

	<!-- ############################################# 수정 S ############################################# -->
		<!-- 마이페이지 리뷰목록 : 로그인세션 및 페이징 처리로 인해 쿼리 수정 -->
	<select id="reviewList"
		parameterType="com.monstar.books.mypage.dto.MyReviewDto"
		resultMap="MyReview">
		SELECT *
		FROM (
		    SELECT A.*, ROWNUM AS RNUM
		    FROM (
		        SELECT
            R.REVIEWNO,
            R.BOOKNO,
            R.MEMBERNO,
            R.RTITLE,
            R.RCONTENT,
            R.REGDATE,
            R.RSTAR,
            R.REFILESRC,
            R.DELETED,
            M.MID AS MID,
            B.BTITLE AS BTITLE,
            (
                SELECT C.BCATEGORY1 
                FROM M_BOOK_CATEGORY C 
                WHERE C.BCATEGORYNO = D.BCATEGORYNO
                AND ROWNUM = 1
            ) AS BCATEGORY1,
            (
                SELECT C.BCATEGORY2 
                FROM M_BOOK_CATEGORY C 
                WHERE C.BCATEGORYNO = D.BCATEGORYNO
                AND ROWNUM = 1
            ) AS BCATEGORY2
        FROM M_REVIEW R
        LEFT JOIN M_BOOK_DETAIL D ON D.BOOKNO = R.BOOKNO
        LEFT JOIN M_MEMBER M ON M.MEMBERNO = R.MEMBERNO
        LEFT JOIN M_BOOK B ON B.BOOKNO = R.BOOKNO
        WHERE M.MID = #{param3} AND R.DELETED = 'NO'
        ORDER BY R.REVIEWNO DESC
    ) A
) WHERE RNUM >= #{param1} AND #{param2} >= RNUM

<!-- 		    <include refid="includeList" /> 적용 시, param4로 변경 -->

		<!-- 마이페이지 리뷰목록 : 로그인세션 처리 전 더미데이터 강제 삽입 -->
<!-- 	SELECT R.REVIEWNO, R.BOOKNO, R.MEMBERNO, R.RCONTENT, R.REGDATE, R.RSTAR, 
		R.REFILESRC, R.DELETED, M.MID, BC.BCATEGORYNO, BC.BCATEGORY1, BC.BCATEGORY2, 
		B.BTITLE FROM M_REVIEW R, M_MEMBER M, M_BOOK_CATEGORY BC, M_BOOK B WHERE 
		R.MEMBERNO = M.MEMBERNO ORDER BY R.REVIEWNO DESC -->

	</select>

	<!-- reviewlist 마이페이지 리뷰 삭제 (완료) -->
	<delete id="reviewdelete">
		DELETE FROM M_REVIEW WHERE REVIEWNO=#{param1}
	</delete>


	<!-- reviewlist 마이페이지 리뷰 상세글 (완료) 리뷰넘버+회원아이디 -->	
	<select id="myReviewView"
		parameterType="com.monstar.books.mypage.dto.MyReviewDto"
		resultMap="MyReview">
		SELECT
			R.REVIEWNO,
			R.MEMBERNO,
			R.RTITLE,
			R.RCONTENT,
			R.RSTAR,
			R.REFILESRC,
			R.DELETED,
			(SELECT M.MID FROM M_MEMBER M WHERE M.MEMBERNO = R.MEMBERNO) AS MID,
			(SELECT B.BOOKNO FROM M_BOOK B WHERE B.BOOKNO = R.BOOKNO) AS BOOKNO,
			(SELECT B.BTITLE FROM M_BOOK B WHERE B.BOOKNO = R.BOOKNO) AS BTITLE,
			(SELECT C.BCATEGORY1 FROM M_BOOK_CATEGORY C WHERE C.BCATEGORYNO =
			D.BCATEGORYNO AND ROWNUM = 1) AS BCATEGORY1,
			(SELECT C.BCATEGORY2 FROM M_BOOK_CATEGORY
			C WHERE C.BCATEGORYNO =
			D.BCATEGORYNO AND ROWNUM = 1) AS BCATEGORY2
		FROM
			M_REVIEW R
		LEFT JOIN M_MEMBER M ON M.MEMBERNO = R.MEMBERNO
		LEFT JOIN M_BOOK B ON B.BOOKNO = R.BOOKNO
		LEFT JOIN M_BOOK_DETAIL D ON D.BOOKNO = R.BOOKNO
		LEFT JOIN M_BOOK_CATEGORY C ON C.BCATEGORYNO = D.BCATEGORYNO
		WHERE
			R.REVIEWNO = #{param1}
		AND M.MID = #{param2} AND R.DELETED = 'NO'

	</select>

	<!-- 마이페이지 리뷰 상세보기 수정(UPDATE) 기능 (완료) -->

		<update id="reviewUpdate">
		    UPDATE M_REVIEW
		    SET 
		    RSTAR = #{param1},
		    RCONTENT = #{param2}
		    <if test="param4 != null and param4 != ''">
		        , REFILESRC = #{param4}
		    </if>
		    WHERE REVIEWNO = #{param3} AND MEMBERNO = #{param5}
		</update>

	<!-- 230905 [효슬] 리뷰 글쓰기폼 불러오기: 사용자, 책, 책 상세정보, 북카테고리, 주문정보 -->
	<select id="bcategories"
		parameterType="com.monstar.books.mypage.dto.MyReviewDto"
		resultMap="MyReview">	        
			<!-- WHERE 회원세션 MID * BOOKNO 검색 (완료) -->
			SELECT
			    R.REVIEWNO,
			    R.MEMBERNO,
			    R.RSTAR,
			    R.RCONTENT,
			    R.REFILESRC,
			    M.MID,
			    B.BOOKNO,
			    B.BTITLE,
			    (SELECT C.BCATEGORY1 FROM M_BOOK_CATEGORY C WHERE C.BCATEGORYNO = D.BCATEGORYNO) AS BCATEGORY1,
			    (SELECT C.BCATEGORY2 FROM M_BOOK_CATEGORY C WHERE C.BCATEGORYNO = D.BCATEGORYNO) AS BCATEGORY2,
			    (SELECT O.ORDERNO FROM M_ORDER_DETAIL O WHERE O.BOOKNO = R.BOOKNO) AS ORDERNO
			FROM
			    M_REVIEW R
			    LEFT JOIN M_MEMBER M ON M.MEMBERNO = R.MEMBERNO
			    LEFT JOIN M_BOOK B ON B.BOOKNO = R.BOOKNO
			    LEFT JOIN M_ORDER_DETAIL O ON O.BOOKNO = R.BOOKNO
			    LEFT JOIN M_BOOK_DETAIL D ON D.BOOKNO = R.BOOKNO
			    LEFT JOIN M_BOOK_CATEGORY C ON C.BCATEGORYNO = D.BCATEGORYNO
			WHERE
			    M.MID = #{param2}
			    AND R.DELETED = 'NO'
			    AND R.BOOKNO = #{param1}
			  
			        
		<!-- 로그인세션 적용 후 WHERE MID * ORDERNO 검색 
		M_ORDER_DETAIL 테이블과 M_BOOK_DETAIL 결합 -->
<!-- 		SELECT
		    R.REVIEWNO,
		    R.MEMBERNO,
		    R.RSTAR,
		    R.RCONTENT,
		    R.REFILESRC,
		    M.MID,
		    B.BOOKNO,
		    B.BTITLE,
		    (SELECT C.BCATEGORY1 FROM M_BOOK_CATEGORY C WHERE C.BCATEGORYNO = D.BCATEGORYNO) AS BCATEGORY1,
		    (SELECT C.BCATEGORY2 FROM M_BOOK_CATEGORY C WHERE C.BCATEGORYNO = D.BCATEGORYNO) AS BCATEGORY2,
		    (SELECT OD.ORDERNO FROM M_ORDER_DETAIL OD WHERE OD.BOOKNO = R.BOOKNO) AS ORDERNO
		FROM
		    M_REVIEW R
		    LEFT JOIN M_MEMBER M ON M.MEMBERNO = R.MEMBERNO
		    LEFT JOIN M_BOOK B ON B.BOOKNO = R.BOOKNO
		    LEFT JOIN M_ORDER_DETAIL OD ON OD.BOOKNO = R.BOOKNO
		    LEFT JOIN M_BOOK_DETAIL D ON D.BOOKNO = OD.BOOKNO
		    LEFT JOIN M_BOOK_CATEGORY C ON C.BCATEGORYNO = D.BCATEGORYNO
		WHERE
		    M.MID = #{param2} 
		    AND OD.ORDERNO = #{param1} 
		    AND R.DELETED = 'NO' -->
		
			        
		<!-- 로그인세션 적용 후 WHERE MID * ORDERNO 검색
		M_ORDER 테이블과 M_ORDER_DETAIL 테이블을 사용하여 주문 정보를 가져와 결합 -->
<!-- 		SELECT
		    R.REVIEWNO,
		    R.MEMBERNO,
		    R.RSTAR,
		    R.RCONTENT,
		    R.REFILESRC,
		    (SELECT M.MID FROM M_MEMBER M WHERE M.MEMBERNO = R.MEMBERNO) AS MID,
		    (SELECT B.BOOKNO FROM M_BOOK B WHERE B.BOOKNO = R.BOOKNO) AS BOOKNO,
		    (SELECT B.BTITLE FROM M_BOOK B WHERE B.BOOKNO = R.BOOKNO) AS BTITLE,
		    (SELECT C.BCATEGORY1 FROM M_BOOK_CATEGORY C WHERE C.BCATEGORYNO = D.BCATEGORYNO) AS BCATEGORY1,
		    (SELECT C.BCATEGORY2 FROM M_BOOK_CATEGORY C WHERE C.BCATEGORYNO = D.BCATEGORYNO) AS BCATEGORY2,
		    (SELECT OD.ORDERNO FROM M_ORDER_DETAIL OD WHERE OD.BOOKNO = R.BOOKNO) AS ORDERNO
		FROM
		    M_REVIEW R
		    LEFT JOIN M_MEMBER M ON M.MEMBERNO = R.MEMBERNO
		    LEFT JOIN M_ORDER O ON O.MEMBERNO = M.MEMBERNO
		    LEFT JOIN M_ORDER_DETAIL OD ON OD.ORDERNO = O.ORDERNO
		    LEFT JOIN M_BOOK B ON B.BOOKNO = R.BOOKNO
		    LEFT JOIN M_BOOK_DETAIL D ON D.BOOKNO = OD.BOOKNO
		    LEFT JOIN M_BOOK_CATEGORY C ON C.BCATEGORYNO = D.BCATEGORYNO
		WHERE
		    M.MID = #{param2} 
		    AND R.DELETED = 'NO' 
		    AND EXISTS (
		        SELECT *
		        FROM M_ORDER O
		        WHERE O.MEMBERNO = M.MEMBERNO 
		        AND O.ORDERNO = #{param1}) -->
		    
	</select>

	<!-- 230906 [효슬] 리뷰 글쓰기 기능 -->
	<insert id="reviewInsert">
		INSERT INTO M_REVIEW(REVIEWNO, BOOKNO, MEMBERNO,
		RTITLE, RCONTENT,
		REGDATE, RSTAR, REFILESRC, DELETED)
		VALUES(M_REVIEW_SEQ.NEXTVAL,
		#{param1}, #{param2}, #{param3},
		#{param4}, SYSDATE, #{param5},
		#{param6}, 'NO')

	</insert>
	<!-- ############################################# 수정 E ############################################# -->

	<!-- 230825 [효슬] 리뷰 페이징 카운트, 조회 기능 -->
	<select id="selectReviewListTotCount1" resultType="Integer">
		SELECT
		COUNT(*) FROM M_REVIEW WHERE RTITLE LIKE '%'|| #{param1} || '%'
	</select>

	<select id="selectReviewListTotCount2" resultType="Integer">
		SELECT
		COUNT(*) FROM M_REVIEW WHERE MEMBERNO LIKE '%'|| #{param1} || '%'
	</select>

	<select id="selectReviewListTotCount3" resultType="Integer">
		SELECT
		COUNT(*) FROM M_REVIEW WHERE RTITLE LIKE '%'|| #{param1} || '%' OR
		MEMBERNO LIKE '%'|| #{param1} || '%'
	</select>

	<select id="selectReviewListTotCount4" resultType="Integer">
		SELECT
		COUNT(*) FROM M_REVIEW
	</select>
	<!-- BTITLE,BCONTENT 각 컬럼에 특정 문자열이 포함된 게시물의 수를 세어 반환 -->


	<!-- <select id="detail"> </select> <insert id="insert"> </insert> <update 
		id="update"> </update> 삭제는 업데이트로 deleted 칼럼 안의 내용을 no-> yes로 바꾸기 <update 
		id="delete" parameterType="int"> UPDATE EX SET deleted='yes' WHERE num=#{param1} 
		</update> -->
	
	<!-- reviewlist 마이페이지 리뷰 삭제 -->
	<!-- <update id="deleteReview" parameterType="com.monstar.books.mypage.dto.MyReviewDto"> 
		UPDATE M_REVIEW SET DELETED = 'YES' WHERE REVIEWNO = #{param1} </update> -->

</mapper>